# Configure the name of this CI unit. This is the name that appears in the GitHub Actions tab
name: CI
# Configure what events trigger this action.
on: [push]

# Configure environment variables that are global to the action defined by this file
env:
  #OPENTAP_COLOR: auto # github messes with the "auto" color detection (i.e. it has no effect), and the "always" option breaks a lot of things
  OPENTAP_ANSI_COLORS: true
  OPENTAP_NO_UPDATE_CHECK: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_CONSOLE_ANSI_COLOR: true

jobs:
  GetVersion:
    runs-on:
       group: OpenTAP-SpokeVPC
       labels:  [Linux, X64]
    container: ghcr.io/opentap/oci-images/build-dotnet:latest
    outputs:
      ShortVersion: ${{ steps.gitversion.outputs.ShortVersion }}
      GitVersion: ${{ steps.gitversion.outputs.GitVersion }}
    steps:
      # The get-gitversion action installs OpenTAP and fetches with fetch-depth: 0
      - name: GitVersion
        id: gitversion
        uses: opentap/get-gitversion@main

  Build:
    runs-on:
       group: OpenTAP-SpokeVPC
       labels:  [Linux, X64]
    container: ghcr.io/opentap/oci-images/build-dotnet:latest
    needs: GetVersion
    env:
      ShortVersion: ${{ needs.GetVersion.outputs.ShortVersion }}
      GitVersion: ${{ needs.GetVersion.outputs.GitVersion }}
    steps:
      # Check out the files in this repository. 
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # 'tap sdk gitversion' can fail if the version history is incomplete. 
          # A fetch-depth of 0 ensures we get a complete history.
          fetch-depth: 0 
      # Fixes an issue with actions/checkout@v3. See https://github.com/actions/checkout/issues/290
      
      - name: Fix tags
        if: startsWith(github.ref, 'refs/tags/v')
        run: git fetch -f origin ${{ github.ref }}:${{ github.ref }} 

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 6.0.x

      - name: Build
        run: |
          echo "${{ secrets.SIGN_SERVER_CERT }}" > $TAP_SIGN_CERT
          dotnet build -c Release ./OpenTap.Plugins.PNAX/OpenTap.Plugins.PNAX.csproj
        env:
          TAP_SIGN_ADDRESS: ${{ secrets.TAP_SIGN_ADDRESS_INTERNAL }}
          TAP_SIGN_AUTH: ${{ secrets.TAP_SIGN_AUTH }}
          TAP_SIGN_CERT: ${{ github.workspace }}/sign.cer
          KS8500_REPO_TOKEN: ${{ secrets.KS8500TOKEN }}
          SIGN_VERSION: "1.5.0-beta.7+8118ecec"
      # Upload the package so it can be downloaded from GitHub, 
      # and consumed by other steps in this workflow
      
      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: tap-package
          retention-days: 5
          path: |
            **/bin/Release/*.TapPackage

  # UnitTests:
  #   runs-on:
  #      group: OpenTAP-SpokeVPC
  #      labels:  [Linux, X64]
  #   container: ghcr.io/opentap/oci-images/build-dotnet:latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Setup .NET
  #       uses: actions/setup-dotnet@v4
  #       with:
  #         dotnet-version: 6.0.x

  #     - name: Build
  #       run: dotnet test


  publish:
    if: github.ref == 'refs/heads/main' || contains(github.ref, 'refs/heads/release') || contains(github.ref, 'refs/tags/v')
    runs-on:
       group: OpenTAP-SpokeVPC
       labels:  [Linux, X64]
    container: ghcr.io/opentap/oci-images/build-dotnet:latest
    needs: Build
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: tap-package

      - name: Setup OpenTAP
        uses: opentap/setup-opentap@main
        with:
          version: 9.25.1
          packages: 'Repository Client:1.0.3-beta.2+a72735c4'
      
      - name: Publish Packages
        run: tap repo upload --repository https://packages.opentap.io --token ${{ secrets.NETWORKANALYZERPUBLISHTOKEN }} "$(find . -name "*.TapPackage")"